// <auto-generated />
using System;
using LibraryExtension.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryExtension.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221221114551_AddSeed")]
    partial class AddSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryExtension.Domain.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("BookAmount")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Julian Tuwim",
                            BookAmount = 1,
                            Title = "Cztery żaby w jednym stawie"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Nesbo Joe",
                            BookAmount = 3,
                            Title = "Krwawy Księżyc"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Remigiusz Mróz",
                            BookAmount = 2,
                            Title = "Z pierwszej piłki"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Ansyway",
                            BookAmount = 4,
                            Title = "Paulina Świst"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Schronisko, które przestało istniec",
                            BookAmount = 1,
                            Title = "Sławomir Gortych"
                        });
                });

            modelBuilder.Entity("LibraryExtension.Domain.Entities.Reader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("ReaderTypeEnum")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Reader");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Franciszek",
                            Pesel = "12312312311",
                            ReaderTypeEnum = 0,
                            Surname = "Kowalski"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Julia",
                            Pesel = "12312312311",
                            ReaderTypeEnum = 2,
                            Surname = "Nowak"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Jan",
                            Pesel = "12312312311",
                            ReaderTypeEnum = 0,
                            Surname = "Wiśniewski"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Maja",
                            Pesel = "12312312311",
                            ReaderTypeEnum = 1,
                            Surname = "Wójcik"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Zofia",
                            Pesel = "12312312311",
                            ReaderTypeEnum = 1,
                            Surname = "Kowalczyk"
                        });
                });

            modelBuilder.Entity("LibraryExtension.Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpectedReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReaderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("ReaderId");

                    b.ToTable("Transaction");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            ExpectedReturnDate = new DateTime(2022, 12, 28, 11, 45, 50, 983, DateTimeKind.Utc).AddTicks(3044),
                            ReaderId = 1,
                            RentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BookId = 3,
                            ExpectedReturnDate = new DateTime(2022, 12, 24, 11, 45, 50, 983, DateTimeKind.Utc).AddTicks(3049),
                            ReaderId = 5,
                            RentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            BookId = 2,
                            ExpectedReturnDate = new DateTime(2023, 1, 5, 11, 45, 50, 983, DateTimeKind.Utc).AddTicks(3050),
                            ReaderId = 2,
                            RentDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LibraryExtension.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("LibraryExtension.Domain.Entities.Book", "Book")
                        .WithMany("Transactions")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryExtension.Domain.Entities.Reader", "Reader")
                        .WithMany("Transactions")
                        .HasForeignKey("ReaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Reader");
                });

            modelBuilder.Entity("LibraryExtension.Domain.Entities.Book", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("LibraryExtension.Domain.Entities.Reader", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
